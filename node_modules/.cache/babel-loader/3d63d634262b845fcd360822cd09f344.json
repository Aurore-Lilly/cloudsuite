{"ast":null,"code":"import \"./index.scss\";\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fas);\ndom.i2svg();\n\n// add event listener to detect scroll\n//target element to apply parallax effect to\n//determine amount of pixel to determine the rate at which it will scroll\n\n// const nav = document.querySelector('.nav')\n// const target = document.querySelectorAll('.scroll');\n\n// window.addEventListener('scroll', (event) => {\n//   var top = window.scrollY;\n\n//   if (top >= 100){\n//     nav.classList.add('active')\n//   } else {\n//     nav.classList.remove('active');\n//   }\n\n//   var index = 0, length = target.length;\n//   for (index; index < length; index++) {\n//       var pos = window.pageYOffset * target[index].dataset.rate;\n\n//       if(target[index].dataset.direction === 'vertical') {\n//           target[index].style.transform = 'translate3d(0px,'+pos+'px, 0px)';\n//       } else {\n//           var posX = window.pageYOffset * target[index].dataset.ratex;\n//           var posY = window.pageYOffset * target[index].dataset.ratey;\n\n//           target[index].style.transform = 'translate3d('+posX+'px, '+posY+'px, 0px)';\n//       };\n//   };\n// });\n\n//パララックス呼び出し\nparallax();\n\n//Intersection Observer + Scroll Event Parallax Vanilla JS\nfunction parallax() {\n  'use strict';\n\n  //class設定\n  //表示エリア class\n  var targetClass = '.parall';\n  //動かす要素 class\n  var childClass = '.scroll';\n\n  //表示エリア取得\n  var targets = Array.prototype.slice.call(document.querySelectorAll(targetClass), 0);\n  //表示エリアが存在するかチェック\n  if (targets.length === 0) {\n    return;\n  }\n\n  //observer設定\n  var observer = new IntersectionObserver(observerFunc, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 0\n  });\n\n  //ウィンドウの高さ取得\n  var winH = window.innerHeight;\n  //スクロール量（ウィンドウの上端）取得\n  var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  //スクロール量（ウィンドウの下端）取得\n  var scrollBottom = scrollTop + winH;\n\n  //初期設定\n  var setListener = [];\n  var settings = [];\n  targets.forEach(function (target, index) {\n    //Listener設定取得用の判別番号をセット\n    target.setAttribute('data-index', index);\n    //動かす要素を取得\n    var child = target.querySelector(childClass);\n    //動かす要素が存在するかチェック\n    if (!child) {\n      return;\n    }\n    //処理用の設定を追加\n    settings.push({\n      child: child,\n      //比率取得：スクロールできる最大量 / (ウィンドウの高さ + 表示エリアの高さ)\n      scrollRatio: (child.clientHeight - target.clientHeight) / (winH + target.clientHeight)\n    });\n    //scrollイベントへ渡すlistener設定\n    setListener.push({\n      target: target,\n      handleEvent: function handleEvent() {\n        requestAnimationFrame(parallaxFunk.bind(target));\n      }\n    });\n    //初期表示の位置調整\n    requestAnimationFrame(parallaxFunk.bind(target));\n    //observer監視開始\n    observer.observe(target);\n  });\n\n  //高さ更新\n  var resizeID;\n  window.addEventListener('resize', function () {\n    clearTimeout(resizeID);\n    resizeID = setTimeout(function () {\n      //ウィンドウの高さ取得\n      winH = window.innerHeight;\n      //各要素の高さ更新\n      targets.forEach(function (target, index) {\n        //動かす要素が存在するかチェック\n        if (!settings[index].child) {\n          return;\n        }\n        //比率取得：スクロールできる最大量 / (ウィンドウの高さ + 表示エリアの高さ)\n        settings[index].scrollRatio = (settings[index].child.clientHeight - target.clientHeight) / (winH + target.clientHeight);\n      });\n    }, 200);\n  });\n\n  //スクロール量更新\n  window.addEventListener('scroll', function () {\n    //スクロール量（ウィンドウの上端）取得\n    scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    //スクロール量（ウィンドウの下端）取得\n    scrollBottom = scrollTop + winH;\n  }, {\n    passive: true\n  });\n\n  //observer処理\n  function observerFunc(entries) {\n    entries.forEach(function (entry) {\n      var target = entry.target;\n      //listener設定取得\n      var listener = setListener[target.getAttribute('data-index')];\n      if (entry.isIntersecting) {\n        target.style.willChange = 'transform';\n        //画面に表示されている要素のみスクロールイベントへ追加\n        window.addEventListener('scroll', listener, {\n          passive: true\n        });\n      } else {\n        target.style.willChange = '';\n        //画面外のときはスクロールイベント削除\n        window.removeEventListener('scroll', listener, {\n          passive: true\n        });\n      }\n    });\n  }\n\n  //パララックス位置調整関数\n  function parallaxFunk() {\n    //番号取得\n    var index = Number(this.getAttribute('data-index'));\n\n    //表示エリアの位置取得\n    var targetPosi = this.getBoundingClientRect().top + scrollTop;\n\n    //ウィンドウの高さに対するスクロール量を取得（小数点第2以下は四捨五入）\n    var setVal = ((scrollBottom - targetPosi) * settings[index].scrollRatio).toFixed(1);\n\n    //スクロール値を設定\n    settings[index].child.style.transform = 'translate3d(0,' + setVal * -1 + 'px,0)';\n  }\n}","map":null,"metadata":{},"sourceType":"module"}